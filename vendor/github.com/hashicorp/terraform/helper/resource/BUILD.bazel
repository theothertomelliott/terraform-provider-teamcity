load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "resource",
    srcs = [
        "error.go",
        "grpc_test_provider.go",
        "id.go",
        "map.go",
        "resource.go",
        "state.go",
        "state_shim.go",
        "testing.go",
        "testing_config.go",
        "testing_import_state.go",
        "wait.go",
    ],
    importmap = "github.com/yext/terraform-provider-teamcity/vendor/github.com/hashicorp/terraform/helper/resource",
    importpath = "github.com/hashicorp/terraform/helper/resource",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/davecgh/go-spew/spew",
        "//vendor/github.com/hashicorp/errwrap",
        "//vendor/github.com/hashicorp/go-multierror",
        "//vendor/github.com/hashicorp/hcl2/hcl",
        "//vendor/github.com/hashicorp/hcl2/hcl/hclsyntax",
        "//vendor/github.com/hashicorp/logutils",
        "//vendor/github.com/hashicorp/terraform/addrs",
        "//vendor/github.com/hashicorp/terraform/command/format",
        "//vendor/github.com/hashicorp/terraform/config",
        "//vendor/github.com/hashicorp/terraform/config/hcl2shim",
        "//vendor/github.com/hashicorp/terraform/configs",
        "//vendor/github.com/hashicorp/terraform/configs/configload",
        "//vendor/github.com/hashicorp/terraform/helper/config",
        "//vendor/github.com/hashicorp/terraform/helper/logging",
        "//vendor/github.com/hashicorp/terraform/helper/plugin",
        "//vendor/github.com/hashicorp/terraform/helper/schema",
        "//vendor/github.com/hashicorp/terraform/internal/initwd",
        "//vendor/github.com/hashicorp/terraform/internal/tfplugin5",
        "//vendor/github.com/hashicorp/terraform/plans",
        "//vendor/github.com/hashicorp/terraform/plugin",
        "//vendor/github.com/hashicorp/terraform/providers",
        "//vendor/github.com/hashicorp/terraform/states",
        "//vendor/github.com/hashicorp/terraform/terraform",
        "//vendor/github.com/hashicorp/terraform/tfdiags",
        "//vendor/github.com/mitchellh/colorstring",
        "//vendor/github.com/zclconf/go-cty/cty",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/test/bufconn",
    ],
)
