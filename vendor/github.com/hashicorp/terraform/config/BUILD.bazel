load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "config",
    srcs = [
        "append.go",
        "config.go",
        "config_string.go",
        "config_terraform.go",
        "config_tree.go",
        "hcl2_shim_util.go",
        "import_tree.go",
        "interpolate.go",
        "interpolate_funcs.go",
        "interpolate_walk.go",
        "lang.go",
        "loader.go",
        "loader_hcl.go",
        "loader_hcl2.go",
        "merge.go",
        "providers.go",
        "provisioner_enums.go",
        "raw_config.go",
        "resource_mode.go",
        "resource_mode_string.go",
        "testing.go",
    ],
    importmap = "github.com/yext/terraform-provider-teamcity/vendor/github.com/hashicorp/terraform/config",
    importpath = "github.com/hashicorp/terraform/config",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/apparentlymart/go-cidr/cidr",
        "//vendor/github.com/blang/semver",
        "//vendor/github.com/hashicorp/errwrap",
        "//vendor/github.com/hashicorp/go-multierror",
        "//vendor/github.com/hashicorp/go-uuid",
        "//vendor/github.com/hashicorp/go-version",
        "//vendor/github.com/hashicorp/hcl",
        "//vendor/github.com/hashicorp/hcl/hcl/ast",
        "//vendor/github.com/hashicorp/hcl2/gohcl",
        "//vendor/github.com/hashicorp/hcl2/hcl",
        "//vendor/github.com/hashicorp/hcl2/hclparse",
        "//vendor/github.com/hashicorp/hil",
        "//vendor/github.com/hashicorp/hil/ast",
        "//vendor/github.com/hashicorp/terraform/config/hcl2shim",
        "//vendor/github.com/hashicorp/terraform/helper/hilmapstructure",
        "//vendor/github.com/hashicorp/terraform/plugin/discovery",
        "//vendor/github.com/hashicorp/terraform/tfdiags",
        "//vendor/github.com/mitchellh/copystructure",
        "//vendor/github.com/mitchellh/go-homedir",
        "//vendor/github.com/mitchellh/hashstructure",
        "//vendor/github.com/mitchellh/mapstructure",
        "//vendor/github.com/mitchellh/reflectwalk",
        "//vendor/github.com/zclconf/go-cty/cty",
        "//vendor/github.com/zclconf/go-cty/cty/convert",
        "//vendor/github.com/zclconf/go-cty/cty/function",
        "//vendor/github.com/zclconf/go-cty/cty/function/stdlib",
        "//vendor/golang.org/x/crypto/bcrypt",
    ],
)
